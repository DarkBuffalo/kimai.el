#+title: kimai.el
#+author: DarkBuffalo
#+MACRO: commit [[https://github.com/DarkBuffalo/kimai.el/commit/$1][$1]]

#+html: <img src="assets/kimai.el_logo.png" align="right" width="150">

Kimai Emacs Integration is an Emacs package that allows users to interact with the Kimai time-tracking application directly from Emacs.
Designed for developers and professionals who use both Emacs and Kimai, the package simplifies time-tracking workflows and eliminates the need to switch between applications.

* Installation

#+begin_src elisp
  (use-package kimai
    :straight ( :host github :repo "DarkBuffalo/kimai.el")
    :custom
    (kimai-server-url "https://your-server/api")
    (kimai-api-token "YOUR-API-TOKKEN")
    (kimai-username "YOUR-USERNAME"))
#+end_src


to start counting your time run the command =kimai-start-tracking= and to stop =kimai-stop-tracking=



#+BEGIN: github-commits :user DarkBuffalo :repo kimai.el :n 5
* Latest commits
- [[https://github.com/DarkBuffalo/kimai.el/commit/9628021][9628021]] - add: macro to readme
- [[https://github.com/DarkBuffalo/kimai.el/commit/5df3b04][5df3b04]] - upd: readme
- [[https://github.com/DarkBuffalo/kimai.el/commit/1447b88][1447b88]] - add: org-timestamp for choose date
- [[https://github.com/DarkBuffalo/kimai.el/commit/17fcb47][17fcb47]] - add: org dynamic block
- [[https://github.com/DarkBuffalo/kimai.el/commit/8359e47][8359e47]] - fix: report

#+END:


* CONTRIBUTING

1. Fork it (<https://github.com/DarkBuffalo/kimai.el/fork>)
2. Create your feature branch (`git checkout -b feature/fooBar`)
3. Commit your changes (`git commit -am 'Add some fooBar'`)
4. Push to the branch (`git push origin feature/fooBar`)
5. Create a new Pull Request


# Local Variables:
# eval: (defun org-dblock-write:github-commits (params)
#         (let* ((user (or (plist-get params :user) "TON-UTILISATEUR"))
#                (repo (or (plist-get params :repo) "TON-DEPOT"))
#                (num (or (plist-get params :n) 5))
#                (url (format "https://api.github.com/repos/%s/%s/commits?per_page=%d" user repo num))
#                (json (with-temp-buffer
#                        (url-insert-file-contents url)
#                        (json-parse-buffer :array-type 'list))))
#           (insert "* Latest commits\n")
#           (dolist (commit json)
#             (let ((sha (substring (gethash "sha" commit) 0 7))
#                   (message (gethash "message" (gethash "commit" commit))))
#               (insert (format "- [[https://github.com/%s/%s/commit/%s][%s]] - %s\n"
#                               user repo sha sha message))))))
# End:
